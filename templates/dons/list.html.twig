{% extends 'back.html.twig' %}

{% block body %}

    <style>

        .btn {
        display: inline-block;
        padding: 10px 15px;
        border-radius: 5px;
        text-decoration: none;
        font-weight: bold;
        transition: 0.3s;
        }

        .btn-warning {
            background-color: #d4a373; /* Marron clair */
            color: white;
        }

        .btn-warning:hover {
            background-color: #b08968;
        }

        .btn-danger {
            background-color: #a23e48;
         color: white;
        }

        .btn-danger:hover {
            background-color: #822727;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
            font-family: Arial, sans-serif;
        }

        table th, table td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        table th {
            background-color: #8d6c5b;
            color: white;
            font-weight: bold;
        }

        table tr:nth-child(even) {
            background-color: #f5f5f5;
        }

        table tr:hover {
            background-color: #f0f0f0;
        }

        .badge {
            display: inline-block;
            padding: 3px 7px;
            border-radius: 15px;
            font-size: 12px;
            font-weight: bold;
            background-color: #4a6fa5;
            color: white;
        }
        .search-container {
            margin: 20px 0;
            display: flex;
            align-items: center;
        }
        
        .search-input {
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            width: 300px;
            font-size: 14px;
        }
        
        .search-clear {
            margin-left: 10px;
            color: #777;
            cursor: pointer;
        }
        
        /* Style pour l'indicateur de chargement */
        .loading {
            display: inline-block;
            margin-left: 10px;
            font-style: italic;
            color: #777;
            display: none;
        }
    </style>
    <div class="container">
        <center><h1>Liste des Dons</h1></center>
        <a href="{{ path('app_crud_dons_add') }}" class="btn btn-warning">Ajouter un Don</a>
        <a href="{{ path('app_statistiques') }}" class="btn btn-warning" style="background-color: #8d6c5b;">
            Statistiques
        </a>
            
        <p></p>
        <div class="search-container">
            <input type="text" id="searchInput" class="search-input" placeholder="Rechercher un don..." value="{{ query }}">
            <span id="clearSearch" class="search-clear" title="Effacer la recherche">‚ùå</span>
            <span id="loadingIndicator" class="loading">Recherche en cours...</span>
        </div>
        <p></p>

    <table id="donsTable">
        <thead>
            <tr>
                
                <th><a href="{{ path('app_crud_dons', { sort: 'montant', order: sortOrder == 'asc' ? 'desc' : 'asc', query: query }) }}">
                Montant {{ sortField == 'montant' ? (sortOrder == 'asc' ? 'üîº' : 'üîΩ') : '' }}
            </a></th>
                <th>Type</th>
                <th>Date</th>
                <th>√âv√©nement</th>
                <th>Description</th>
                <th>Actions</th>
            </tr>
         </thead>
        <tbody>
            {% for don in dons %}
                <tr>
                    
                    <td>{{ don.montant }} TND</td>
                    <td>{{ don.typeDon }}</td>
                    <td>{{ don.dateDon|date('d/m/Y') }}</td>
                    <td>
                        {% if don.idEvent %}
                            {{ don.idEvent.nom }}
                        {% else %}
                            <span style="color: #999;">Aucun √©v√©nement</span>
                        {% endif %}
                    </td>
                    <td>{{ don.description|slice(0, 30) }}{% if don.description|length > 30 %}...{% endif %}</td>
                    <td class="actions">
                        <a href="{{ path('app_crud_dons_edit', {'id': don.idDon}) }}" class="btn btn-warning">Modifier</a>
                        <a href="{{ path('app_crud_dons_delete', {'id': don.idDon}) }}" class="btn btn-danger" onclick="return confirm('Voulez-vous vraiment supprimer cet orphelin ?');">Supprimer</a>
                    </td>
                </tr>
            {% else %}
                <tr>
                    <td colspan="6" style="text-align: center; padding: 15px; color: #777;">Aucun don trouv√©</td>
                </tr>
            {% endfor %}
        </tbody>
    </table>
</div>

<script>
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('searchInput');
            const clearSearch = document.getElementById('clearSearch');
            const loadingIndicator = document.getElementById('loadingIndicator');
            const tbody = document.querySelector('#donsTable tbody');
            let currentSortField = '{{ sortField }}';
            let currentSortOrder = '{{ sortOrder }}';
            let searchTimeout;
            
            // Fonction pour effectuer la recherche
            function performSearch() {
                const query = searchInput.value.trim();
                clearTimeout(searchTimeout);
                
                loadingIndicator.style.display = 'inline-block';
                
                searchTimeout = setTimeout(() => {
                    fetch(`{{ path('app_crud_dons_search') }}?query=${encodeURIComponent(query)}&sort=${currentSortField}&order=${currentSortOrder}`)
                        .then(response => response.json())
                        .then(data => {
                            updateTable(data);
                            loadingIndicator.style.display = 'none';
                        })
                        .catch(error => {
                            console.error('Erreur lors de la recherche:', error);
                            loadingIndicator.style.display = 'none';
                        });
                }, 300); // D√©lai pour √©viter les requ√™tes multiples
            }
            
            // Fonction pour mettre √† jour le tableau avec les r√©sultats
            function updateTable(results) {
                tbody.innerHTML = '';
                
                if (results.length === 0) {
                    const noResultsRow = document.createElement('tr');
                    noResultsRow.id = 'no-results';
                    noResultsRow.innerHTML = `<td colspan="6" style="text-align: center; padding: 15px; color: #777;">Aucun don trouv√©</td>`;
                    tbody.appendChild(noResultsRow);
                } else {
                    results.forEach(don => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                            <td>${don.montant} TND</td>
                            <td>${don.typeDon}</td>
                            <td>${don.dateDon}</td>
                            <td>${don.evenement}</td>
                            <td>${don.description}</td>
                            <td class="actions">
                                <a href="${don.editUrl}" class="btn btn-warning">Modifier</a>
                                <a href="${don.deleteUrl}" class="btn btn-danger" onclick="return confirm('Voulez-vous vraiment supprimer ce don ?');">Supprimer</a>
                            </td>
                        `;
                        tbody.appendChild(row);
                    });
                }
            }
            
            // Gestion du tri
            document.querySelectorAll('.sort-link').forEach(link => {
                link.addEventListener('click', function() {
                    const field = this.dataset.field;
                    const newOrder = (field === currentSortField && currentSortOrder === 'asc') ? 'desc' : 'asc';
                    
                    currentSortField = field;
                    currentSortOrder = newOrder;
                    
                    // Mise √† jour des indicateurs de tri
                    document.querySelectorAll('.sort-indicator').forEach(indicator => {
                        indicator.textContent = '';
                    });
                    this.querySelector('.sort-indicator').textContent = (newOrder === 'asc') ? 'üîº' : 'üîΩ';
                    
                    performSearch();
                });
            });
            
            // √âv√®nement de recherche
            searchInput.addEventListener('input', performSearch);
            
            // √âv√®nement pour effacer la recherche
            clearSearch.addEventListener('click', function() {
                searchInput.value = '';
                performSearch();
            });
        });
    </script>

{% endblock %}




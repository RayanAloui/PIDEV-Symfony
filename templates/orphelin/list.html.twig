{% extends 'back.html.twig' %}

{% block body %}
<style>
    body {
        font-family: 'Arial', sans-serif;
        background-color: #f5efe6; /* Beige clair */
        color: #5a3e36; /* Marron foncÃ© */
        margin: 0;
        padding: 0;
    }

    h1 {
        text-align: center;
        color: #4a2c2a;
        font-size: 32px;
    }

    .container {
        width: 90%;
        max-width: 1200px;
        margin: auto;
        padding: 20px;
        background: white;
        border-radius: 10px;
        box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.1);
    }

    .btn {
        display: inline-block;
        padding: 10px 15px;
        border-radius: 5px;
        text-decoration: none;
        font-weight: bold;
        transition: 0.3s;
    }

    .btn-warning {
        background-color: #d4a373; /* Marron clair */
        color: white;
    }

    .btn-warning:hover {
        background-color: #b08968;
    }

    .btn-danger {
        background-color: #a23e48;
        color: white;
    }

    .btn-danger:hover {
        background-color: #822727;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
        background: white;
        border-radius: 10px;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
    }

    table th, table td {
        padding: 15px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }

    table th {
        background-color: #8d6c5b; /* Marron doux */
        color: white;
    }

    table tr:nth-child(even) {
        background-color: #f5efe6;
    }

    table tr:hover {
        background-color: #e6d5c7;
        transition: 0.3s;
    }

    .actions {
        display: flex;
        gap: 10px;
    }

    .no-data {
        text-align: center;
        padding: 15px;
        color: #b08968;
    }

    /* Conteneur du formulaire */
.form-group {
    display: flex;
    align-items: center;
    gap: 10px;
    margin-bottom: 20px;
}

/* Champ de recherche */
input[type="search"] {
    flex-grow: 1;
    padding: 10px;
    font-size: 16px;
    border: 1px solid #ccc;
    border-radius: 5px;
    transition: border 0.3s ease;
}

input[type="search"]:focus {
    border-color: #b08968;
    outline: none;
}

/* Bouton de recherche */
button {
    background-color: #b08968;
    color: white;
    border: none;
    padding: 10px 15px;
    font-size: 16px;
    border-radius: 5px;
    cursor: pointer;
    transition: background 0.3s ease;
}

button:hover {
    background-color: #b08968;
}

    .search-bar {
    width: 100%;
    padding: 10px;
    font-size: 16px;
    margin-bottom: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
}

/* Style des boutons */
.chart-button {
    background-color: #4CAF50;
    color: white;
    padding: 14px 20px;
    margin: 10px;
    font-size: 18px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.chart-button:hover {
    background-color: #45a049;
}

/* Espacement et taille des graphiques */
canvas {
    width: 100% !important;
    height: 450px !important; /* Taille du graphique */
    margin: 40px 0; /* Espacement autour des graphiques */
}

/* SpÃ©cifier le conteneur des graphiques */
#pieChartContainer, #barChartContainer, #lineChartContainer {
    margin-bottom: 40px; /* Ajout d'espace entre chaque graphique */
    border: 2px solid #ddd; /* Bordure lÃ©gÃ¨re autour des graphiques */
    border-radius: 10px; /* Coins arrondis pour les graphiques */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Ombre douce pour donner un effet de profondeur */
}

/* Titre des graphiques */
h3 {
    text-align: center;
    font-size: 30px;
    font-weight: bold;
    margin-bottom: 30px;
}

</style>

<body>
    <div class="container">
        <h1>Liste des Orphelins</h1>
        <a href="{{ path('app_crud_orphelin_add') }}" class="btn btn-warning">Ajouter un Orphelin</a>

        <a href="{{ path('orphelins_pdf') }}" class="btn btn-danger">ðŸ“„ Exporter en PDF</a>

        <a href="{{ path('app_crud_tuteur') }}" class="btn btn-danger">Liste des tuteurs</a>

        <a href="{{ path('app_crud_cours') }}" class="btn btn-danger">Liste des cours</a>

        <p></p>

        {{ form_start(form) }}
            {{ form_widget(form.query) }}
        {{ form_end(form) }}
        
        <table>
            <thead>
                <tr>
                     <th>
                     <a href="{{ path('app_crud_orphelin', { sort: 'nomO', order: sortOrder == 'asc' ? 'desc' : 'asc' }) }}">
                        Nom {{ sortField == 'nomO' ? (sortOrder == 'asc' ? 'ðŸ”¼' : 'ðŸ”½') : '' }}
                     </a>
                     </th>
                    <th>
                    <a href="{{ path('app_crud_orphelin', { sort: 'prenomO', order: sortOrder == 'asc' ? 'desc' : 'asc' }) }}">
                      PrÃ©nom {{ sortField == 'prenomO' ? (sortOrder == 'asc' ? 'ðŸ”¼' : 'ðŸ”½') : '' }}
                    </a>
                    </th>
                    <th>
                    <a href="{{ path('app_crud_orphelin', { sort: 'dateNaissance', order: sortOrder == 'asc' ? 'desc' : 'asc' }) }}">
                         Date de naissance {{ sortField == 'dateNaissance' ? (sortOrder == 'asc' ? 'ðŸ”¼' : 'ðŸ”½') : '' }}
                    </a>
                    </th>
                    <th>
                    <a href="{{ path('app_crud_orphelin', { sort: 'sexe', order: sortOrder == 'asc' ? 'desc' : 'asc' }) }}">
                         Sexe {{ sortField == 'sexe' ? (sortOrder == 'asc' ? 'ðŸ”¼' : 'ðŸ”½') : '' }}
                    </a>
                    </th>
                    <th>
                    <a href="{{ path('app_crud_orphelin', { sort: 'situationScolaire', order: sortOrder == 'asc' ? 'desc' : 'asc' }) }}">
                         Situation Scolaire {{ sortField == 'situationScolaire' ? (sortOrder == 'asc' ? 'ðŸ”¼' : 'ðŸ”½') : '' }}
                    </a>
                    </th>
                    <th>
                    <a href="{{ path('app_crud_orphelin', { sort: 'tuteur', order: sortOrder == 'asc' ? 'desc' : 'asc' }) }}">
                         Tuteur {{ sortField == 'tuteur' ? (sortOrder == 'asc' ? 'ðŸ”¼' : 'ðŸ”½') : '' }}
                    </a>
                    </th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="orphelins-list">
                {% for orphelin in orphelins %}
                    <tr>
                        <td>{{ orphelin.nomO }}</td>
                        <td>{{ orphelin.prenomO }}</td>
                        <td>{{ orphelin.dateNaissance|date('d/m/Y') }}</td>
                        <td>{{ orphelin.sexe }}</td>
                        <td>{{ orphelin.situationScolaire }}</td>
                        <td>{{ orphelin.tuteur.nomT }} {{ orphelin.tuteur.prenomT }}</td>
                        <td class="actions">
                            <a href="{{ path('app_crud_orphelin_edit', {'id': orphelin.idO}) }}" class="btn btn-warning">Modifier</a>
                            <a href="{{ path('app_crud_orphelin_delete', {'id': orphelin.idO}) }}" class="btn btn-danger" onclick="return confirm('Voulez-vous vraiment supprimer cet orphelin ?');">Supprimer</a>
                        </td>
                    </tr>
                {% else %}
                    <tr>
                        <td colspan="7" class="no-data">Aucun orphelin trouvÃ©.</td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>

        <h3>Statistiques des orphelins par tuteur</h3>
        <table class="table">
           <thead>
              <tr>
                  <th>Tuteur</th>
                  <th>Nombre d'orphelins</th>
             </tr>
            </thead>
        <tbody>
        {% for stat in stats %}
            <tr>
                <td>{{ stat.nomT }}</td>
                <td>{{ stat.orphelinCount }}</td>
            </tr>
        {% else %}
            <tr>
                <td colspan="2">Aucune donnÃ©e disponible.</td>
            </tr>
        {% endfor %}
        </tbody>
        </table>

        <h3>ðŸ“Š Statistiques Graphiques</h3>

<!-- Boutons pour changer de graphique -->
<div style="text-align: center;">
    <button id="pieButton" class="chart-button">Pie Chart</button>
    <button id="barButton" class="chart-button">Bar Chart</button>
    <button id="lineButton" class="chart-button">Line Chart</button>
</div>

<!-- Conteneurs des graphiques -->
<div id="pieChartContainer" style="display: none;">
    <canvas id="pieChart"></canvas>
</div>
<div id="barChartContainer" style="display: none;">
    <canvas id="barChart"></canvas>
</div>
<div id="lineChartContainer" style="display: none;">
    <canvas id="lineChart"></canvas>
</div>

<!-- Inclure Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        fetch("{{ path('app_orphelin_stats') }}")
            .then(response => response.json())
            .then(data => {
                const labels = data.labels;
                const counts = data.counts;

                // ðŸŽ¯ Configuration des options de base pour les graphiques
                const config = (type, ctx, title) => ({
                    type: type,
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Nombre d\'orphelins',
                            data: counts,
                            backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4CAF50', '#9C27B0'],
                            borderColor: '#000',
                            borderWidth: 2
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            title: {
                                display: true,
                                text: title,  // Titre pour chaque graphique
                                font: {
                                    size: 22,
                                    weight: 'bold'
                                }
                            },
                            legend: {
                                display: true,
                                position: 'top', // Afficher la lÃ©gende en haut
                                labels: {
                                    font: {
                                        size: 18
                                    }
                                }
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    font: {
                                        size: 18
                                    }
                                }
                            },
                            x: {
                                ticks: {
                                    font: {
                                        size: 18
                                    }
                                }
                            }
                        }
                    }
                });

                // ðŸ“Œ Pie Chart
                const pieChart = new Chart(document.getElementById('pieChart'), config('pie', 'pieChart', 'RÃ©partition des orphelins par tuteur'));

                // ðŸ“Œ Bar Chart
                const barChart = new Chart(document.getElementById('barChart'), config('bar', 'barChart', 'Nombre d\'orphelins par tuteur'));

                // ðŸ“Œ Line Chart
                const lineChart = new Chart(document.getElementById('lineChart'), config('line', 'lineChart', 'Ã‰volution du nombre d\'orphelins par tuteur'));

                // Logique pour afficher/masquer les graphiques en fonction des boutons
                const pieButton = document.getElementById('pieButton');
                const barButton = document.getElementById('barButton');
                const lineButton = document.getElementById('lineButton');

                const pieChartContainer = document.getElementById('pieChartContainer');
                const barChartContainer = document.getElementById('barChartContainer');
                const lineChartContainer = document.getElementById('lineChartContainer');

                // Cacher tous les graphiques au dÃ©part
                pieChartContainer.style.display = 'none';
                barChartContainer.style.display = 'none';
                lineChartContainer.style.display = 'none';

                // Afficher le PieChart lorsqu'on clique sur le bouton
                pieButton.addEventListener('click', () => {
                    pieChartContainer.style.display = 'block';
                    barChartContainer.style.display = 'none';
                    lineChartContainer.style.display = 'none';
                });

                // Afficher le BarChart lorsqu'on clique sur le bouton
                barButton.addEventListener('click', () => {
                    pieChartContainer.style.display = 'none';
                    barChartContainer.style.display = 'block';
                    lineChartContainer.style.display = 'none';
                });

                // Afficher le LineChart lorsqu'on clique sur le bouton
                lineButton.addEventListener('click', () => {
                    pieChartContainer.style.display = 'none';
                    barChartContainer.style.display = 'none';
                    lineChartContainer.style.display = 'block';
                });
            })
            .catch(error => {
                console.error("Erreur lors de la rÃ©cupÃ©ration des donnÃ©es:", error);
            });
    });
</script>




    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const searchInput = document.querySelector(".search-input");
            const orphelinsList = document.getElementById("orphelins-list");

            searchInput.addEventListener("input", function () {
                let query = this.value.trim();

                if (query === '') {
        fetch('/orphelin/list') 
            .then(response => response.text())
            .then(html => {
                let parser = new DOMParser();
                let doc = parser.parseFromString(html, 'text/html');
                let tbody = doc.querySelector('#orphelinsList'); 
                document.getElementById('orphelinsList').innerHTML = tbody.innerHTML;
            });
        return;
    }

                fetch(`/orphelins/search?query=${encodeURIComponent(query)}`)
                    .then(response => response.json())
                    .then(data => {
                        orphelinsList.innerHTML = ""; // Effacer le tableau avant d'ajouter de nouveaux rÃ©sultats

                        if (data.orphelins.length === 0) {
                            orphelinsList.innerHTML = "<tr><td colspan='5'>Aucun orphelin trouvÃ©.</td></tr>";
                            return;
                        }

                        data.orphelins.forEach(orphelin => {
                            let row = `<tr>
                                <td>${orphelin.nomO}</td>
                                <td>${orphelin.prenomO}</td>
                                <td>${orphelin.dateNaissance}</td>
                            </tr>`;
                            orphelinsList.innerHTML += row;
                        });
                    });
            });
        });
    </script>
</body>

{% endblock %}